package com.kabouterlabs.jodeint.cdvode;
import java.util.Collections;
import java.util.Iterator;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Callback;
import org.bridj.FlagSet;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
import org.bridj.ann.Runtime;
/**
 * Wrapper for library <b>cdvode</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("cdvode") 
@Runtime(CRuntime.class) 
public class CdvodeLibrary {
	static {
		BridJ.register();
	}
	/**
	 * enum values<br>
	 * <i>native declaration : src/main/native/codeint/cdvode/include/cdvode.h</i>
	 */
	public enum cdvode_itol_e implements IntValuedEnum<cdvode_itol_e > {
		ALL_SCALAR(1),
		ATOL_ARRAY(2),
		RTOL_ARRAY(3),
		ALL_ARRAY(4);
		cdvode_itol_e(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<cdvode_itol_e > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<cdvode_itol_e > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * enum values<br>
	 * <i>native declaration : src/main/native/codeint/cdvode/include/cdvode.h</i>
	 */
	public enum code_itask_e implements IntValuedEnum<code_itask_e > {
		NORMAL(1),
		ONESTEP_ONLY(2),
		STOP_AT_FIRST_MESH(3),
		NORMAL_TCRIT(4),
		ONESTEP_TCRIT(5);
		code_itask_e(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<code_itask_e > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<code_itask_e > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * enum values<br>
	 * <i>native declaration : src/main/native/codeint/cdvode/include/cdvode.h</i>
	 */
	public enum cdvode_istate_in_e implements IntValuedEnum<cdvode_istate_in_e > {
		FIRST_CALL(1),
		NEXT_CALL(2),
		NEXT_CALL_WITH_CHANGES(3);
		cdvode_istate_in_e(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<cdvode_istate_in_e > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<cdvode_istate_in_e > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * enum values<br>
	 * <i>native declaration : src/main/native/codeint/cdvode/include/cdvode.h</i>
	 */
	public enum cdvode_istate_out_e implements IntValuedEnum<cdvode_istate_out_e > {
		NOTHING_DONE(1),
		SUCCESS_DONE(2),
		MXSTEPS_EXCEEDED(-1),
		TO_MUCH_ACCURACY(-2),
		ILLEGAL_INPUT(-3),
		ERROR_TEST_FAILURES(-4),
		CONVERGENCE_FAILURES(-5),
		ZERO_ERR_TOLERANCE(-6);
		cdvode_istate_out_e(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<cdvode_istate_out_e > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<cdvode_istate_out_e > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * enum values<br>
	 * <i>native declaration : src/main/native/codeint/cdvode/include/cdvode.h</i>
	 */
	public enum cdvode_iopt_e implements IntValuedEnum<cdvode_iopt_e > {
		NO_OPTIONAL_INPUTS(0),
		OPTIONAL_INPUTS(1);
		cdvode_iopt_e(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<cdvode_iopt_e > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<cdvode_iopt_e > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * enum values<br>
	 * <i>native declaration : src/main/native/codeint/cdvode/include/cdvode.h</i>
	 */
	public enum cdvode_jacobian_saving_strategy_e implements IntValuedEnum<cdvode_jacobian_saving_strategy_e > {
		SAVE_COPY(1),
		NO_COPY(-1);
		cdvode_jacobian_saving_strategy_e(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<cdvode_jacobian_saving_strategy_e > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<cdvode_jacobian_saving_strategy_e > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * enum values<br>
	 * <i>native declaration : src/main/native/codeint/cdvode/include/cdvode.h</i>
	 */
	public enum cdvode_method_e implements IntValuedEnum<cdvode_method_e > {
		ADAMS(1),
		BDF(2);
		cdvode_method_e(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<cdvode_method_e > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<cdvode_method_e > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * enum values<br>
	 * <i>native declaration : src/main/native/codeint/cdvode/include/cdvode.h</i>
	 */
	public enum cdvode_iteration_method_e implements IntValuedEnum<cdvode_iteration_method_e > {
		NO_JACOBIAN(0),
		EXTERNAL_FULL_JACOBIAN(1),
		INTERNAL_FULL_JACOBIAN(2),
		INTERNAL_DIAG_JACOBIAN(3),
		EXTERNAL_BAND_JACOBIAN(4),
		INTERNAL_BAND_JACOBIAN(5);
		cdvode_iteration_method_e(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<cdvode_iteration_method_e > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<cdvode_iteration_method_e > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/**
	 * enum values<br>
	 * <i>native declaration : src/main/native/codeint/cdvode/include/cdvode.h</i>
	 */
	public enum cdvode_ode_err_e implements IntValuedEnum<cdvode_ode_err_e > {
		UNCHANGED(2),
		SUCCESS(0),
		ERROR(-1),
		UNKNOWN_ERROR(-20);
		cdvode_ode_err_e(long value) {
			this.value = value;
		}
		public final long value;
		public long value() {
			return this.value;
		}
		public Iterator<cdvode_ode_err_e > iterator() {
			return Collections.singleton(this).iterator();
		}
		public static IntValuedEnum<cdvode_ode_err_e > fromValue(int value) {
			return FlagSet.fromValue(value, values());
		}
	};
	/** <i>native declaration : src/main/native/codeint/cdvode/include/cdvode.h</i> */
	public static abstract class cdvode_ode_func extends Callback<cdvode_ode_func > {
		public void apply(Pointer<Integer > neq, Pointer<Double > t_, Pointer<Double > y, Pointer<Double > ydot, Pointer<Double > rpar, Pointer<Integer > ipar) {
			apply(Pointer.getPeer(neq), Pointer.getPeer(t_), Pointer.getPeer(y), Pointer.getPeer(ydot), Pointer.getPeer(rpar), Pointer.getPeer(ipar));
		}
		public void apply(@Ptr long neq, @Ptr long t_, @Ptr long y, @Ptr long ydot, @Ptr long rpar, @Ptr long ipar) {
			apply((Pointer)Pointer.pointerToAddress(neq, Integer.class), (Pointer)Pointer.pointerToAddress(t_, Double.class), (Pointer)Pointer.pointerToAddress(y, Double.class), (Pointer)Pointer.pointerToAddress(ydot, Double.class), (Pointer)Pointer.pointerToAddress(rpar, Double.class), (Pointer)Pointer.pointerToAddress(ipar, Integer.class));
		}
	};
	/** <i>native declaration : src/main/native/codeint/cdvode/include/cdvode.h</i> */
	public static abstract class cdvode_jac_func extends Callback<cdvode_jac_func > {
		public void apply(Pointer<Integer > neq, Pointer<Double > t_, Pointer<Double > y, Pointer<Integer > ml, Pointer<Integer > mu, Pointer<Double > pd, Pointer<Integer > nrowpd, Pointer<Double > rpar, Pointer<Integer > ipar) {
			apply(Pointer.getPeer(neq), Pointer.getPeer(t_), Pointer.getPeer(y), Pointer.getPeer(ml), Pointer.getPeer(mu), Pointer.getPeer(pd), Pointer.getPeer(nrowpd), Pointer.getPeer(rpar), Pointer.getPeer(ipar));
		}
		public void apply(@Ptr long neq, @Ptr long t_, @Ptr long y, @Ptr long ml, @Ptr long mu, @Ptr long pd, @Ptr long nrowpd, @Ptr long rpar, @Ptr long ipar) {
			apply((Pointer)Pointer.pointerToAddress(neq, Integer.class), (Pointer)Pointer.pointerToAddress(t_, Double.class), (Pointer)Pointer.pointerToAddress(y, Double.class), (Pointer)Pointer.pointerToAddress(ml, Integer.class), (Pointer)Pointer.pointerToAddress(mu, Integer.class), (Pointer)Pointer.pointerToAddress(pd, Double.class), (Pointer)Pointer.pointerToAddress(nrowpd, Integer.class), (Pointer)Pointer.pointerToAddress(rpar, Double.class), (Pointer)Pointer.pointerToAddress(ipar, Integer.class));
		}
	};
	/**
	 * Original signature : <code>CDVODE_ODE_RETVAL vode_basic(double*, double*, cdvode_ode_func, int, double, double, double, CDVODE_METH)</code><br>
	 * <i>native declaration : src/main/native/codeint/cdvode/include/cdvode.h:49</i>
	 */
	public static IntValuedEnum<CdvodeLibrary.cdvode_ode_err_e > vode_basic(Pointer<Double > stack, Pointer<Double > q, Pointer<CdvodeLibrary.cdvode_ode_func > f_func, int neq, double t0, double tf, double dt, IntValuedEnum<CdvodeLibrary.cdvode_method_e > meth) {
		return FlagSet.fromValue(vode_basic(Pointer.getPeer(stack), Pointer.getPeer(q), Pointer.getPeer(f_func), neq, t0, tf, dt, (int)meth.value()), CdvodeLibrary.cdvode_ode_err_e.class);
	}
	protected native static int vode_basic(@Ptr long stack, @Ptr long q, @Ptr long f_func, int neq, double t0, double tf, double dt, int meth);
}
