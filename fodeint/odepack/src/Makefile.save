OUT_BASE_DIR = $(PWD)/../../../target/lib/
OS = $(shell uname)
##########################
ifeq ($(OS), sunos)
LDFLAGS		+= 	-mimpure-text
endif
ifeq ($(OS), linux)
CPPFLAGS  +=  -D_GNU_SOURCE
endif

ifeq ($(OS), Darwin)
OS_ARCH = darwin_universal
CPPFLAGS  += -D_DARWIN_C_SOURCE
CPPFLAGS  += -mmacosx-version-min=10.4
LDFLAGS   += -mmacosx-version-min=10.4
SHARED_EXT = dylib
else
OS_ARCH = linux_x64
SHARED_EXT = so
endif

ifneq ($(OS), sunos)
ifneq ($(OS), darwin)
	LDFLAGS   += -Wl,--hash-style=both
endif
endif
OUT_DIR = $(OUT_BASE_DIR)/$(OS_ARCH)


#FCFLAGS = -fPIC -std=legacy -ftree-vectorize -msse2 -ftree-vectorizer-verbose=0 -ffast-math
FCFLAGS = -fPIC -std=legacy -ftree-vectorize -msse2  -ffast-math
FC = gfortran $(FCFLAGS)
LINFLAGS =  -lm -lgfortran 
INCFLAGS =
#CCFLAGS = -fPIC -O3 -ftree-vectorize -msse2 -ftree-vectorizer-verbose=0 -ffast-math
CCFLAGS = -fPIC -O3 -ftree-vectorize -msse2  -ffast-math
CC = gcc $(CCFLAGS) $(INCFLAGS)

DOBJECTS = opkdmain.o opkda1.o opkda2.o

DLIBNAME =  odepack

.f.o:
	$(FC) -c $< -o $@

.c.o:
	$(CC) -c $< -o $@

all:
	make double-dynamic

double-dynamic: $(DOBJECTS)
	mkdir -p $(OUT_DIR)
	$(CC)  -L /usr/local/gfortran/lib/ $(LINFLAGS) -dynamiclib -Wl  -o $(OUT_DIR)/lib$(DLIBNAME).$(SHARED_EXT) $(DOBJECTS)


clean:
	- rm -f *.o *~
	- rm $(OUT_DIR)/lib$(DLIBNAME).$(SHARED_EXT)
