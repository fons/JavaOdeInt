OUT_BASE_DIR = $(PWD)/../../../target/lib/
OS = $(shell uname)
##########################

ifeq ($(OS), linux)
CPPFLAGS  +=  -D_GNU_SOURCE
endif

ifeq ($(OS), Darwin)
OS_ARCH = darwin_universal
CPPFLAGS  += -D_DARWIN_C_SOURCE
CPPFLAGS  += -mmacosx-version-min=10.11
LDFLAGS   += -mmacosx-version-min=10.11
SHARED_EXT = dylib
else
OS_ARCH = linux_x64
SHARED_EXT = so
LDFLAGS   += -Wl,--hash-style=both
endif


############################
OUT_DIR = $(OUT_BASE_DIR)/$(OS_ARCH)

LINFLAGS =   -lodepack 
INCFLAGS =
CCFLAGS = -g -fPIC -O3 -ftree-vectorize -msse2  -ffast-math -std=gnu99
CC = gcc $(CCFLAGS) $(INCFLAGS)

OBJECTS = stack.o odeint.o lsoda.o lsodar.c lsode.o lsodes.o lsod.o 

LIBNAME = codepack


.c.o:
	$(CC) -c $< -o $@

main: 
	make dynamic

dynamic: $(OBJECTS)
	@mkdir -p $(OUT_DIR)
	$(CC) -L$(OUT_DIR)  $(LINFLAGS) -dynamiclib $(LDFLAGS) -o $(OUT_DIR)/lib$(LIBNAME).$(SHARED_EXT) $(OBJECTS)

clean:
	- rm -f *.o *.a *.$(SHARED_EXT)
	- rm $(OUT_DIR)/lib$(LIBNAME).$(SHARED_EXT)
